{% comment %}theme-check-disable TemplateLength{% endcomment %}
{{ 'section-main-product.css' | asset_url | stylesheet_tag }}
{{ 'component-accordion.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-rte.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'component-rating.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{% assign color_product = settings %}
<style>
  {% for color in color_product %}
    .product-{{color}}{
      background-color:{{settings[color]}} !important;
    }
  {% endfor %}
  .inavilitable{
    opacity: 0.2;
    pointer-events: none;
    cursor: not-allowed;
  }
</style>


<link rel="stylesheet" href="{{ 'component-deferred-media.css' | asset_url }}" media="print" onload="this.media='all'">

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

{%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'">
  <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<section class="page-width">
  <div class="product grid grid--1-col {% if product.media.size > 0 %}grid--2-col-tablet{% else %}product--no-media{% endif %}">
    <div class="grid__item product__media-wrapper">
      <slider-component class="slider-mobile-gutter"  id="{{section.id}}">
        {%- render 'photos-product', product: product, use_variant: true, show_badges: true, photo_class: 'images-test' -%}
      </slider-component>
    </div>
    <div class="product__info-wrapper grid__item">
      <div 
        id="ProductInfo-{{ section.id }}" 
        class="product__info-container{% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        {%- assign product_form_id = 'product-form-' | append: section.id -%}
          <h1 class="product__title" {{ block.shopify_attributes }}>
            {{ product.title | escape }}
          </h1>
          <div class="no-js-hidden" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
            {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
          </div>
          {%- if product.description != blank -%}
            <div class="product__description rte">
              {{ product.description }}
            </div>
          {%- endif -%}
          {%- unless product.has_only_default_variant -%}
              <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                {%- for option in product.options_with_values -%}
                    <fieldset class="js product-form__input">
                      <legend class="form__label">{{ option.name }}</legend>
                      {%- for value in option.values -%}
                        <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                              name="{{ option.name }}"
                              value="{{ value | escape }}"
                              form="product-form-{{ section.id }}"
                              set-handle="{{product.handle}}"
                              {% if option.selected_value == value %}checked{% endif %}
                              class="inputs-test"
                              data-handle="{{product.handle}}"
                              data-variant="{{product.variants[forloop.index0].id}}"
                        >
                        <label for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" class="product-{{value}}">
                          {{ value }}
                        </label>
                      {%- endfor -%}
                    </fieldset>
                {%- endfor -%}
              </variant-radios>
          {%- endunless -%}
          {{ 'option_selection.js' | shopify_asset_url | script_tag }}
          <div class="product-form__input product-form__quantity" {{ block.shopify_attributes }}>
            <label class="form__label" for="Quantity-{{ section.id }}">
              {{ 'products.product.quantity.label' | t }}
            </label>

            <quantity-input class="quantity">
              <button class="quantity__button no-js-hidden" name="minus" type="button" id="less-btn">
                <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                {% render 'icon-minus' %}
              </button>
              <input class="quantity__input"
                  type="number"
                  name="quantity"
                  id="Quantity-{{ section.id }}"
                  min="1"
                  max=""
                  value="1"
                  form="product-form-{{ section.id }}"
                >
              <button class="quantity__button no-js-hidden" name="plus" type="button" id="plus-btn">
                <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                {% render 'icon-plus' %}
              </button>
            </quantity-input>
          </div>
          <div id="send-to-cart" class="{% if  product.selected_or_first_available_variant.available%} {% else %} inavilitable {% endif %}">
            <a 
              href="/cart/{{product.selected_or_first_available_variant.id}}:1"
              id="send-to-checkout"
              class="product-form__submit button button--full-width button--primary"
              data-id="{{product.selected_or_first_available_variant.id}}">
              <span>
                {%- if product.selected_or_first_available_variant.available -%}
                  {{ 'products.product.add_to_cart' | t }}
                {%- else -%}
                  {{ 'products.product.sold_out' | t }}
                {%- endif -%}
              </span>
            </a>
          </div>
          <div class="{% if  product.selected_or_first_available_variant.available%} {% else %} inavilitable {% endif %}">
            <button
              id="open-cart"
              class="product-form__submit button button--full-width button--primary"
              data-id="{{product.selected_or_first_available_variant.id}}">
              <span>
                Open Cart
              </span>
            </button>
          </div>
      </div>
    </div>
  </div>

</section>

<script>
  const changePageImage = (data) => {
    let section = document.querySelector('.product-section')
    section.innerHTML = data
    selectItems()
  }

  const fetchIndexProduct = (handle, variantId, sectionId) => {
    let url = `/products/${handle}?variant=${variantId}&section_id=custom-product`
    const request = fetch(url)
      .then(response => response.text())
      .then(data => changePageImage(data));
  }

  const selectItems = () => {
    const colors = [...document.querySelectorAll('.inputs-test')]
    colors.forEach(e => {
      e.addEventListener('change', (event) => {
        if (event.currentTarget.checked) {
          fetchIndexProduct(e.dataset.handle, e.dataset.variant)
        }
      })
    })
  }
  selectItems()

  const btnForSend = document.getElementById('send-to-cart')
  if (btnForSend){
    btnForSend.addEventListener("click", () => {
      const inputQnt = document.querySelector('.quantity__input')
      const linkToCart = document.getElementById('send-to-checkout')
      const idProduct = linkToCart.dataset.id
      let oldHref = linkToCart.href
      const baseHref = oldHref.substring(0, `${oldHref.indexOf(idProduct) + idProduct.length}`)
      const newHref = `${baseHref}:${inputQnt.value}`
      linkToCart.href = newHref
      linkToCart.click()
    })
  }

  const changeClasstoCart = () => {
    let cart = document.getElementById('mini-cart')
    cart.classList.toggle('active')
  }

  const upCart = () => {
    fetch('/cart.js')
    .then(response => {
      return response.json();
    })
    .then(data => {
      console.log(data)
      changeClasstoCart()
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  }

  const fetchProduct = (formData) => {
    console.log(formData)
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    })
    .then(response => {
      console.log(response.json())
      upCart()
      return response.json();
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  }

  const openCart = document.querySelector('#open-cart')
  if (openCart){
    openCart.addEventListener("click", () => {
      let id = openCart.dataset.id
      const inputValue = document.querySelector('.quantity__input').value
      let formData = {
        'items': [
          {
          'id': id,
          'quantity': inputValue
          }
      ], 
        sections: "minicard-test"
      }
      fetchProduct(formData)
    })
  }


</script>

{% schema %}
{
  "name": "cutom-product",
  "tag": "section",
  "class": "product-section spaced-section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible tab",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    }
  ]
}
{% endschema %}